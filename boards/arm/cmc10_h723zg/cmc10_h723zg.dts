/dts-v1/;
#include <st/h7/stm32h723Xg.dtsi>
#include <st/h7/stm32h723zgtx-pinctrl.dtsi>

/ {
    model = "CMC10 STM32H723ZG";
    compatible = "optima,cmc10_h723zg";

    chosen {
        zephyr,dtcm = &dtcm;
		zephyr,sram = &sram0;
		
        zephyr,flash = &flash0;
        zephyr,code-partition = &slot0_partition;

        zephyr,console = &usart1;
		zephyr,shell-uart = &usart1;
    };

    aliases {
        ionet-usart = &usart2;
        j101-usart= &usart1;
    };

    gpio_in {
        compatible = "gpio-keys";
        wdg_feedback: wdg_feedback {
            label = "watchdog feedback";
            gpios = <&gpioe 4 GPIO_ACTIVE_HIGH>;
        };
        power_fail: power_fail {
            label = "Power Fail";
            gpios = <&gpiof 15 GPIO_ACTIVE_HIGH>;
        };

        digin_1: digin_1 {
            label = "digin_1";
            gpios = <&gpioc 6 GPIO_ACTIVE_HIGH>;
        };
        digin_2: digin_2 {
            label = "digin_2";
            gpios = <&gpioc 7 GPIO_ACTIVE_HIGH>;
        };
        digin_3: digin_3 {
            label = "digin_3";
            gpios = <&gpioc 8 GPIO_ACTIVE_HIGH>;
        };
        digin_4: digin_4 {
            label = "digin_4";
            gpios = <&gpioc 9 GPIO_ACTIVE_HIGH>;
        };
        digin_5: digin_5 {
            label = "digin_5";
            gpios = <&gpiod 12 GPIO_ACTIVE_HIGH>;
        };
        digin_6: digin_6 {
            label = "digin_6";
            gpios = <&gpiob 7 GPIO_ACTIVE_HIGH>;
        };
        digin_7: digin_7 {
            label = "digin_7";
            gpios = <&gpiod 14 GPIO_ACTIVE_HIGH>;
        };
        digin_8: digin_8 {
            label = "digin_8";
            gpios = <&gpiod 15 GPIO_ACTIVE_HIGH>;
        };
        digin_9: digin_9 {
            label = "digin_9";
            gpios = <&gpiob 14 GPIO_ACTIVE_HIGH>;
        };
        digin_10: digin_10 {
            label = "digin_10";
            gpios = <&gpiob 15 GPIO_ACTIVE_HIGH>;
        };

        eth_int: eth_int {
            label = "eth_int";
            gpios = <&gpioe 7 GPIO_ACTIVE_HIGH>;
        };
    };

    gpio_out {
        compatible = "gpio-leds";
        cm4_restore: cm4_restore {
            label = "CM4 Restore";
            gpios = <&gpiof 0 GPIO_ACTIVE_LOW>;
        };
        cm4_reset: cm4_reset {
            label = "CM4 Reset";
            gpios = <&gpiof 1 GPIO_ACTIVE_HIGH>;
        };        
        debug: debug {
            label = "debug";
            gpios = <&gpioa 11 GPIO_ACTIVE_HIGH>;
        };
        alarm: alarm {
            label = "alarm";
            gpios = <&gpioe 3 GPIO_ACTIVE_LOW>;
        };

        led_red: led_red {
            label = "led_red";
            gpios = <&gpioc 13 (GPIO_ACTIVE_LOW | GPIO_OPEN_DRAIN)>;
        };
        led_green: led_green {
            label = "led_green";
            gpios = <&gpioc 14 (GPIO_ACTIVE_LOW | GPIO_OPEN_DRAIN)>;
        };
        led_blue: led_blue {
            label = "led_blue";
            gpios = <&gpioc 15 (GPIO_ACTIVE_LOW | GPIO_OPEN_DRAIN)>;
        };
        
        display_dcx: display_dcx {
            label = "display_dcx";
            gpios = <&gpiod 0 GPIO_ACTIVE_HIGH>;
        };
        display_rst: display_rst {
            label = "display_rst";
            gpios = <&gpiod 1 GPIO_ACTIVE_HIGH>;
        };
        touch_xy: touch_xy {
            label = "touch_xy";
            gpios = <&gpioc 12 GPIO_ACTIVE_HIGH>;
        };
        touch_xn: touch_xn {
            label = "touch_xn";
            gpios = <&gpiof 4 GPIO_ACTIVE_HIGH>;
        };
        touch_xp: touch_xp {
            label = "touch_xp";
            gpios = <&gpiof 6 GPIO_ACTIVE_HIGH>;
        };
        touch_yn: touch_yn {
            label = "touch_yn";
            gpios = <&gpiof 8 GPIO_ACTIVE_HIGH>;
        };
        touch_yp: touch_yp {
            label = "touch_yp";
            gpios = <&gpiof 10 GPIO_ACTIVE_HIGH>;
        };

        ionet_txen: ionet_txen {
            label = "ionet_txen";
			gpios = <&gpiod 4 (GPIO_PUSH_PULL | GPIO_ACTIVE_HIGH)>;
        };
		ionet_rxen: ionet_rxen {
			label = "ionet_rxen";
			gpios = <&gpiod 3 (GPIO_PUSH_PULL | GPIO_ACTIVE_HIGH)>;
		};
        ionet_terminate: ionet_terminate {
			label = "ionet_terminate";
			gpios = <&gpiod 2 GPIO_ACTIVE_HIGH>;
		};

        ethsw_reset_gpio: ethsw_reset_gpio {
            label = "ethsw_reset_gpio";
            gpios = <&gpiog 1 GPIO_ACTIVE_LOW>;
        };
    };
    
    soc {
		pinctrl: pin-controller@58020000 {
            quadspi_clk_pb2: quadspi_clk_pb2 {
				pinmux = <STM32_PINMUX('B', 2, AF9)>;   // P1
				slew-rate = "very-high-speed";
			};
            quadspi_ncs_pg6: quadspi_ncs_pg6 {
				pinmux = <STM32_PINMUX('G', 6, AF10)>;  // P1
				bias-pull-up;
			};
            quadspi_bk1_io0_pd11: quadspi_bk1_io0_pd11 {
				pinmux = <STM32_PINMUX('D', 11, AF9)>;  // P1
				bias-pull-down;
			};
            quadspi_bk1_io1_pc10: quadspi_bk1_io1_c10 {
				pinmux = <STM32_PINMUX('C', 10, AF9)>;  // P1
				bias-pull-down;
			};
            quadspi_bk1_io2_pe2: quadspi_bk1_io2_pe2 {
				pinmux = <STM32_PINMUX('E', 2, AF9)>;   // P1
				bias-pull-down;
			};
            quadspi_bk1_io3_pd13: quadspi_bk1_io3_pd13 {
				pinmux = <STM32_PINMUX('D', 13, AF9)>;  // P1
				bias-pull-down;
			};

            mco1_pa8: mco1_pa8 {
				pinmux = <STM32_PINMUX('A', 8, AF0)>;
				slew-rate = "very-high-speed";
			};
        };
    };

    pwm_out {
		compatible = "pwm-leds";

		watchdog_out: watchdog_out {
            /* On PB9 : Timer 4 Channel 4*/
			pwms = <&pwm_4 4 1 PWM_POLARITY_NORMAL>;
			label = "watchdog_out";
		};
	};

    qspi1: quadspi@5200B400{
        compatible = "st,stm32-qspi";
        reg = <0x5200B400 DT_SIZE_K(1024)>;
        label = "QSPI";
        pinctrl-0 = <
            &quadspi_clk_pb2
            &quadspi_ncs_pg6
            &quadspi_bk1_io0_pd11
            &quadspi_bk1_io1_pc10
            &quadspi_bk1_io2_pe2
            &quadspi_bk1_io3_pd13
        >;

        // Note: DMA needs to be configured
        dmas = <&dma1 5 5 0x0000 0x03>;        
        dma-names = "tx_rx";
        
        interrupt-parent = <&nvic>;
        interrupts = <92 0>;

        status = "okay";
    };

	aliases {
		wdg-feedback = &wdg_feedback;
		power-fail = &power_fail;
		din-1 = &digin_1;
		din-2 = &digin_2;
		din-3 = &digin_3;
		din-4 = &digin_4;
		din-5 = &digin_5;
		din-6 = &digin_6;
		din-7 = &digin_7;
		din-8 = &digin_8;
		din-9 = &digin_9;
		din-10 = &digin_10;
        eth-int = &eth_int;
        ethsw-reset-gpio = &ethsw_reset_gpio;

		cm4-restore = &cm4_restore;
		cm4-reset = &cm4_reset;
        debug = &debug;
        alarm = &alarm;
        led-red = &led_red;
        led-green = &led_green;
        led-blue = &led_blue;
        display-rst = &display_rst;
        ionet-txen = &ionet_txen;
		ionet-rxen = &ionet_rxen;
        ionet-terminate = &ionet_terminate;
	};
};

&usart1{
    pinctrl-0 = <
        &usart1_tx_pa9
        &usart1_rx_pa10
    >;
    current-speed = <115200>;
    status = "okay";
};

&usart2{
    pinctrl-0 = <
        &usart2_tx_pd5
        &usart2_rx_pd6
    >;
    current-speed = <500000>;
    status = "okay";
};

&adc1 {
    pinctrl-0 = <
        /* R_ADC In */
        &adc1_inp2_pf11
        &adc1_inp3_pa6
        &adc1_inp5_pb1
        &adc1_inp6_pf12
        &adc1_inp9_pb0
        &adc1_inp10_pc0
        &adc1_inp15_pa3
        &adc1_inp16_pa0
        &adc1_inp18_pa4

        /* ADC SP12V */
        &adc1_inp19_pa5
    >;
    status = "okay";
};

&adc2 {
    pinctrl-0 = <
        /* 24V Int */
        &adc2_inp2_pf13
        /* SP24V */
        &adc2_inp6_pf14
    >;

    /* disabled due to FOP-1677 */
    status = "disabled";
};

&adc3 {
    pinctrl-0 = <
        /* Display and Touch */
        &adc3_inp9_pf4
        &adc3_inp8_pf6
        &adc3_inp7_pf8
        &adc3_inp6_pf10

        /* U ADC In*/
        &adc3_inp0_pc2
        &adc3_inp1_pc3
        &adc3_inp2_pf9
        &adc3_inp3_pf7
        &adc3_inp4_pf5
        &adc3_inp5_pf3
    >;
    status = "okay";
};

&timers1 {
	status = "okay";

	pwm_1: pwm {
		status = "okay";
		st,prescaler = <10000>;
		pinctrl-0 = <
            /* Aout 1 -> 4 */
            &tim1_ch1_pe9
            &tim1_ch2_pe11
            &tim1_ch3_pe13
            &tim1_ch4_pe14
        >;
	};
};

&timers2 {
	status = "okay";

	pwm_2: pwm {
		status = "okay";
		st,prescaler = <0>;
		pinctrl-0 = <
            /* Aout 5 */
            &tim2_ch1_pa15
            /* Display Backlight */
            &tim2_ch3_pb10
        >;
	};
};

&timers4 {
	status = "okay";

	pwm_4: pwm {
		status = "okay";
		pinctrl-0 = <
            /* Watchdog Out */
            &tim4_ch4_pb9
        >;
	};
};

&spi1{
    compatible = "st,stm32-spi";
    status = "okay";
    pinctrl-0 = <
         &spi1_miso_pg9
         &spi1_mosi_pd7
         &spi1_nss_pg10
         &spi1_sck_pg11
    >;
    cs-gpios =	<&gpiog 10 GPIO_ACTIVE_LOW>;

    ili9341@0 {
        compatible = "ilitek,ili9341";
        label = "ILI9341";
        /* Minimum of 10MHz. 
         * Increasing to 20MHz seems to 
         * result in unreliable communication.
         * Could possibly increase speed with
         * in-depth analysis of unreliable
         * communication.
         */
        spi-max-frequency = <15000000>;
        reg = <0>;
        cmd-data-gpios = <&gpiod 0 GPIO_ACTIVE_LOW>;
        reset-gpios = <&gpiod 1 GPIO_ACTIVE_LOW>;
    };
};

&spi4{
    compatible = "st,stm32-spi";
    status = "okay";
    pinctrl-0 = <
         &spi4_miso_pe5
         &spi4_mosi_pe6
    >;    
};

&spi6{
    compatible = "st,stm32-spi";
    status = "okay";
    pinctrl-0 = <
         &spi6_miso_pg12
         &spi6_mosi_pg14
         &spi6_sck_pg13
         &spi6_nss_pg8
    >;
    cs-gpios =	<&gpiog 8 GPIO_ACTIVE_LOW>;

};

&mac {
    status = "okay";
    pinctrl-0 = < 
        &eth_mdc_pc1
        &eth_rxd0_pc4
        &eth_rxd1_pc5
        &eth_ref_clk_pa1
        &eth_mdio_pa2
        &eth_crs_dv_pa7
        &eth_tx_en_pb11
        &eth_txd0_pb12
        &eth_txd1_pb13
        &mco1_pa8
    >;
};

&flash0 {
    partitions {
 		compatible = "fixed-partitions";
 		#address-cells = <1>;
 		#size-cells = <1>;
 
		/* 48KB for bootloader */
 		boot_partition: partition@0 {
 			label = "mcuboot";
			reg = <0x00000000 0x0000C000>;
 			read-only;
 		};
 
		/* storage: 4KB for settings */
		/*
		 * The flash starting at 0x0000c000 and ending at
		 * 0x0000cfff is reserved for use
		 * by the application.
		 */
        storage_partition: partition@C000 {
            label = "storage";
            reg = <0x0000C000 0x00001000>;
        };

        /* 
         * Remaining size: 896kB
         * beware, when flashing the application,
         * openocd erases sector wise. As the H7 sector size is 128kB,
         * we need to start the application image slot at 128kB offset,
         * to prevent the boot_partition to be erased
         */
        /* application image slot: 448KB */
        slot0_partition: partition@20000 {
            label = "image-0";
            reg = <0x00020000 0x00070000>;
        };
        
        slot1_partition: partition@90000 {
            label = "image-1";
            reg = <0x00090000 0x00070000>;
        };
 	};
};
